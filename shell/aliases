alias gits="git status"
alias activate="source ./env/bin/activate"
alias config="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
alias lt="fd --type f --hidden --exclude .git" # "List Tree"

# Check if stuff is installed
doctor() {
    cecho() {
        echo "\e[${1}m$2\e[0m"
    }
    section() {
        echo -n "=> "; cecho 96 $1
    }

    cecho 33 "The doctor will see you now..."
    
    section "Checking everything is installed properly..."

    declare -A utils
    utils=( \
        [fd]="https://github.com/sharkdp/fd" \
        [bat]="https://github.com/sharkdp/bat" \
        [tree]="https://en.wikipedia.org/wiki/Tree_(command)" \
        [rg]="https://github.com/BurntSushi/ripgrep" \
        [fzf]="https://github.com/junegunn/fzf" \
        [sponge]="https://man.archlinux.org/man/sponge.1" \
        [nvim]="https://neovim.io" \
        [omz]="https://ohmyz.sh/"
    )

    for util link in ${(kv)utils}; do
        if command -v $util &> /dev/null ; then
            echo "    - ✅ \e[92m'$util' is installed!\e[0m"
        else
            echo "    - ⚠️  \e[91m'$util' not found.\e[0m Find it @ $link"
        fi
    done
    
    section "Checking for updates..."
    echo -n "Are dotfiles are up-to-date? "
    UPSTREAM=${1:-'@{u}'}
    LOCAL=$(git -C $HOME/.dotfiles rev-parse @)
    REMOTE=$(git -C $HOME/.dotfiles rev-parse "$UPSTREAM")
    BASE=$(git -C $HOME/.dotfiles merge-base @ "$UPSTREAM")

    if [ $LOCAL = $REMOTE ]; then
        cecho 92 "Yes!"
    elif [ $LOCAL = $BASE ]; then
        cecho 91 "No! Pull new configs from remote."
    elif [ $REMOTE = $BASE ]; then
        cecho 94 "There are local commits to push to remote."
    else
        cecho 91 "No! Local and remote branches have diverged!"
    fi
}

# Not really an alias but
body() {
    POSITIONALS=()
    LINES=10
    PRINT_HEAD=false

    while [[ $# -gt 0 ]]; do
        case $1 in
            -n|--lines)
                LINES="$2"
                shift
                shift
                ;;
            -h|--head)
                PRINT_HEAD=true
                shift
                ;;
            -*|--*)
                echo "Unknown option $1"
                exit 1
                ;;
            *)
                POSITIONALS+=("$1")
                shift
                ;;
        esac
    done

    set -- "${POSITIONALS[@]}"

    if [[ -z $1 ]]; then
        echo "Missing target file."
        exit 1
    fi
    
    result=""
    total_lines=$(wc -l < $1)
    if [ $PRINT_HEAD = true ]; then
        result+=$(head -n 1 $1)
        result+="\n"
    fi

    if [[ $LINES -gt $total_lines ]]; then
        cat $1
        exit 0
    fi
    
    result+=$(cat $1 | head -n $(( $(( $(( $total_lines - $LINES )) / 2 )) + $LINES )) | tail -n $LINES)

    echo $result
}

lens() {
    if [[ $1 =~ ".*\.csv" ]]; then
        csvlens $@
    elif [[ $1 =~ ".*\.tsv" ]]; then
        csvlens $@ -t
    else
        bat $@
    fi
}
